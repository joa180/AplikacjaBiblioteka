// <auto-generated />
using System;
using LibSys.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibSys.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibSys.Models.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookDefinitionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookDefinitionId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c43f6640-213d-47eb-b9ee-5f23ada1f854"),
                            BookDefinitionId = new Guid("062270fa-a29b-428b-b6dd-296980c631d6"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2da576d8-875a-4303-ba90-4eec1f4e0bf4"),
                            BookDefinitionId = new Guid("2e06518f-3313-438d-a545-8a78eacc4c24"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("bc2f6f00-d71e-4b0c-bf88-3491226c5e8e"),
                            BookDefinitionId = new Guid("d4e971b0-c39d-413c-a241-f8474cf976eb"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("6aad88fe-9d65-40ee-8064-db424dc0030b"),
                            BookDefinitionId = new Guid("396b403a-ee0a-4e44-afd7-281d15fe1f67"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("22014102-1313-4e1b-8595-0ee3bd956b7b"),
                            BookDefinitionId = new Guid("46f06f84-b189-47e1-964b-d971f6904423"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("aa7cf24e-6e31-4c5f-8037-32ed8148c9ab"),
                            BookDefinitionId = new Guid("062270fa-a29b-428b-b6dd-296980c631d6"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("672ade0f-565c-4c9d-af7a-b0f565137021"),
                            BookDefinitionId = new Guid("7384aafe-a2a9-4a09-85fd-c5292194a108"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("ba99538f-bc6d-4449-90c1-4be0422516e8"),
                            BookDefinitionId = new Guid("d4e971b0-c39d-413c-a241-f8474cf976eb"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("19248010-1156-415a-93a0-217d40fd7e6a"),
                            BookDefinitionId = new Guid("3c14af86-7dab-4fe3-9a95-01e5baa562af"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("11f62823-1efc-42ae-a239-fafaf4f7fea4"),
                            BookDefinitionId = new Guid("8d9da468-088d-405d-90b1-51699ae1c343"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("27655560-e153-4196-a8d7-6adb93cf1852"),
                            BookDefinitionId = new Guid("f24c1c06-332e-40e7-b2e4-0891228d8447"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("8f488434-89bf-4660-8c1e-7e0b7884d408"),
                            BookDefinitionId = new Guid("396b403a-ee0a-4e44-afd7-281d15fe1f67"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d9340b27-794e-4863-a250-cd235c04e394"),
                            BookDefinitionId = new Guid("66268f6f-1422-4449-95eb-fbd81fd8c1ae"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("c64332b8-b6f0-4862-a614-a44932a2aa1f"),
                            BookDefinitionId = new Guid("ec53108e-a520-41c8-966e-a692e4c03101"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2fdab4b6-424b-41f5-abef-c7875672a417"),
                            BookDefinitionId = new Guid("f24c1c06-332e-40e7-b2e4-0891228d8447"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ef240381-d0cd-4bb1-be14-b5cc056569ab"),
                            BookDefinitionId = new Guid("cd222b11-ecaf-44f4-8ab0-874301d5bec6"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d244a1ed-90f0-4c3c-97c2-92d56669b090"),
                            BookDefinitionId = new Guid("72dd903c-8380-42eb-881e-b0555b204795"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8679964a-259c-4a4f-8f68-5b5419613df3"),
                            BookDefinitionId = new Guid("f87e33ee-519f-42e9-8907-3c804b1fd8f9"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("ceec6e66-c6c5-43ed-a389-78a98a40821a"),
                            BookDefinitionId = new Guid("0c706e3d-1ec9-43ce-9750-68f582395cce"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("fb93e5f7-c147-4a80-b20c-70fe58d8b9f5"),
                            BookDefinitionId = new Guid("8ee4a029-fd57-452c-871d-e19fabb35114"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("1a8c333c-50c3-4e8f-a95a-9327806ccfe8"),
                            BookDefinitionId = new Guid("4d09d67e-fcdb-4e84-84e7-d0e8c9cfedce"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c13d3d58-8afd-46b6-850f-b58659534e5d"),
                            BookDefinitionId = new Guid("8ee4a029-fd57-452c-871d-e19fabb35114"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("79b85eeb-5dea-4b6e-9f79-0080b7f23e4e"),
                            BookDefinitionId = new Guid("750ae84d-6328-4b6e-a94f-cbf4898168bb"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("94c0afe1-5f40-4dae-b882-623a85daffa4"),
                            BookDefinitionId = new Guid("89dad99f-71cb-48ef-b19f-3a9d6301881e"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("a4df2a14-e39d-4c8f-988c-0a5cdb242a78"),
                            BookDefinitionId = new Guid("d014ef0f-e191-4da4-ac86-846a74cfce4c"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("37fbddd2-185e-492a-bf9e-dc118c7fe40d"),
                            BookDefinitionId = new Guid("2e06518f-3313-438d-a545-8a78eacc4c24"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("7a1d6684-fa6a-4358-898b-003f1b7028c0"),
                            BookDefinitionId = new Guid("89dad99f-71cb-48ef-b19f-3a9d6301881e"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f6dfe78e-f6c5-4279-81cd-db3b0277118d"),
                            BookDefinitionId = new Guid("61d994af-c364-48cc-9c53-e5043a1b9969"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3a77f0d5-8653-4bea-971e-23ad0c9b15a8"),
                            BookDefinitionId = new Guid("46f06f84-b189-47e1-964b-d971f6904423"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("eb18c1b0-13f8-4350-9dc7-3463649709b0"),
                            BookDefinitionId = new Guid("72dd903c-8380-42eb-881e-b0555b204795"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("8efe06d1-e615-4b8d-8dbf-6112abf544ad"),
                            BookDefinitionId = new Guid("f24c1c06-332e-40e7-b2e4-0891228d8447"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cf748795-aacc-40a2-b9c7-d33294897510"),
                            BookDefinitionId = new Guid("8d9da468-088d-405d-90b1-51699ae1c343"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("023352d7-c904-4761-b84f-ff545db51356"),
                            BookDefinitionId = new Guid("4d002809-363f-41e0-9611-6f4cba6a0801"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1b2eb048-13a8-43e2-a3fc-62022420fbe6"),
                            BookDefinitionId = new Guid("46f06f84-b189-47e1-964b-d971f6904423"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("50035461-e853-4c6d-aeb5-ceed737981ee"),
                            BookDefinitionId = new Guid("750ae84d-6328-4b6e-a94f-cbf4898168bb"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("603fe8fd-219c-4d88-b7b7-482f40bc66d4"),
                            BookDefinitionId = new Guid("1e6515c7-d830-4a93-aebb-a0d2c21214a4"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("8988e5f4-a7fc-45cc-8947-e6e918eff2e7"),
                            BookDefinitionId = new Guid("8d9da468-088d-405d-90b1-51699ae1c343"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("01fca12c-f8a3-437f-a270-e5ef5add16ae"),
                            BookDefinitionId = new Guid("79335884-9aea-4434-ab2d-83a7be4aa26e"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("af5a1f45-dcf4-4270-b9a4-e29c085779c1"),
                            BookDefinitionId = new Guid("89dad99f-71cb-48ef-b19f-3a9d6301881e"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("aaa97ac9-79b6-490c-bef6-340436769ed4"),
                            BookDefinitionId = new Guid("89dad99f-71cb-48ef-b19f-3a9d6301881e"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("b08e3e5c-9cc2-477b-b002-48435e5a5ddf"),
                            BookDefinitionId = new Guid("8d9da468-088d-405d-90b1-51699ae1c343"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("052594b0-f8d7-40bf-a9d6-0033fd15a601"),
                            BookDefinitionId = new Guid("2e06518f-3313-438d-a545-8a78eacc4c24"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("ec283a56-a97f-4ecb-a49d-124f0aab6fff"),
                            BookDefinitionId = new Guid("72dd903c-8380-42eb-881e-b0555b204795"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("a8a01d9d-a135-406f-bdbd-b223c348ed89"),
                            BookDefinitionId = new Guid("3c14af86-7dab-4fe3-9a95-01e5baa562af"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a3081493-83fe-43f8-bef5-a6d1a7025bbc"),
                            BookDefinitionId = new Guid("79335884-9aea-4434-ab2d-83a7be4aa26e"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("980125c3-39fd-43fe-8264-4f54792ddacf"),
                            BookDefinitionId = new Guid("f75e6b9e-ceb2-495c-a689-2d19c2b2d7ea"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("68ea4b22-f817-4e39-a958-6ac88c003750"),
                            BookDefinitionId = new Guid("f75e6b9e-ceb2-495c-a689-2d19c2b2d7ea"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("fc5b9a46-84bb-4764-a9d4-8942c8598281"),
                            BookDefinitionId = new Guid("f75e6b9e-ceb2-495c-a689-2d19c2b2d7ea"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("9d6b194d-31a1-40ff-a418-cc8675899a95"),
                            BookDefinitionId = new Guid("7384aafe-a2a9-4a09-85fd-c5292194a108"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a9d9b579-8558-4e53-9dcb-8419803a05fc"),
                            BookDefinitionId = new Guid("f75e6b9e-ceb2-495c-a689-2d19c2b2d7ea"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("70c358fe-12d4-4eb0-bf72-96ce14674701"),
                            BookDefinitionId = new Guid("d10781e9-e6bf-4952-97b6-dda58844ac3a"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("c5cc291c-60b3-4501-8dce-f17065ee37f0"),
                            BookDefinitionId = new Guid("fe2be515-3634-4a46-a76f-505911cc0d98"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("02e621b2-752e-47db-8ce2-971897f83a74"),
                            BookDefinitionId = new Guid("7384aafe-a2a9-4a09-85fd-c5292194a108"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("a2fb0a1a-08f5-410f-9e1d-44dc536d676f"),
                            BookDefinitionId = new Guid("09bdf78d-fde7-46dc-a8b0-44afd8dbb719"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("3392f6b8-c125-455a-bfc0-51ed23cd5916"),
                            BookDefinitionId = new Guid("f24c1c06-332e-40e7-b2e4-0891228d8447"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("05990418-afeb-47e3-a46e-bb228339faa6"),
                            BookDefinitionId = new Guid("750ae84d-6328-4b6e-a94f-cbf4898168bb"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("9659dc42-3b4c-4bd1-af41-4da7957752d8"),
                            BookDefinitionId = new Guid("66268f6f-1422-4449-95eb-fbd81fd8c1ae"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("b56f1f9a-5273-4b1d-ace9-53c7f2cefd8c"),
                            BookDefinitionId = new Guid("d4e971b0-c39d-413c-a241-f8474cf976eb"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("5d8eb8c3-aeb1-4d6f-9e10-ded6a3946e65"),
                            BookDefinitionId = new Guid("cd222b11-ecaf-44f4-8ab0-874301d5bec6"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d134db95-61d3-4525-a8f3-dc9641e316ed"),
                            BookDefinitionId = new Guid("61d994af-c364-48cc-9c53-e5043a1b9969"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7144c051-b774-4462-984d-487da78c948b"),
                            BookDefinitionId = new Guid("ec53108e-a520-41c8-966e-a692e4c03101"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e5be96c6-4657-430f-a6dc-b597c71cf010"),
                            BookDefinitionId = new Guid("8ee4a029-fd57-452c-871d-e19fabb35114"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e8ec9325-676a-4291-9d09-f1017c5ffeda"),
                            BookDefinitionId = new Guid("3c14af86-7dab-4fe3-9a95-01e5baa562af"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("af477235-538e-47db-81fc-9518081ee63c"),
                            BookDefinitionId = new Guid("1e6515c7-d830-4a93-aebb-a0d2c21214a4"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("152329e1-9ab8-476b-a558-bac4e2f51be4"),
                            BookDefinitionId = new Guid("b2c12a54-08a0-4783-8491-dad63f188605"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("884476b4-9973-48d6-8d60-ffa649912291"),
                            BookDefinitionId = new Guid("89dad99f-71cb-48ef-b19f-3a9d6301881e"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("843ade19-21df-4d97-8321-1bf2342a16cc"),
                            BookDefinitionId = new Guid("062270fa-a29b-428b-b6dd-296980c631d6"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("7bde3419-8096-4577-939d-af86d556df0a"),
                            BookDefinitionId = new Guid("09bdf78d-fde7-46dc-a8b0-44afd8dbb719"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("908a71b4-3f3d-46ea-b76b-44c35346d8b4"),
                            BookDefinitionId = new Guid("66268f6f-1422-4449-95eb-fbd81fd8c1ae"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("59b01459-61e0-49c2-a4b1-9a0566d54db8"),
                            BookDefinitionId = new Guid("fe2be515-3634-4a46-a76f-505911cc0d98"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("f78de5f9-269a-4a10-a248-b7380dc2e1ab"),
                            BookDefinitionId = new Guid("66268f6f-1422-4449-95eb-fbd81fd8c1ae"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7d4385e8-ef4c-403c-9422-22c6689d7589"),
                            BookDefinitionId = new Guid("4d09d67e-fcdb-4e84-84e7-d0e8c9cfedce"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("6ac050a6-b9c2-43a4-bbf1-ca3916730c1f"),
                            BookDefinitionId = new Guid("f24c1c06-332e-40e7-b2e4-0891228d8447"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("8941c63b-b8ce-409f-a448-fc4719a1bf5b"),
                            BookDefinitionId = new Guid("f87e33ee-519f-42e9-8907-3c804b1fd8f9"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("1336bcf0-0ed6-40cc-84c5-542b843a17e6"),
                            BookDefinitionId = new Guid("7384aafe-a2a9-4a09-85fd-c5292194a108"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("f6a1ac1e-587e-4ba2-b8e9-58e1549fa132"),
                            BookDefinitionId = new Guid("d4e971b0-c39d-413c-a241-f8474cf976eb"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("66d20b62-da53-4da4-b7ee-b943a9ca7c5f"),
                            BookDefinitionId = new Guid("d014ef0f-e191-4da4-ac86-846a74cfce4c"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("f85bc3a1-4745-4191-869a-95868bed835d"),
                            BookDefinitionId = new Guid("f87e33ee-519f-42e9-8907-3c804b1fd8f9"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("ff35e743-764f-4715-a0ec-6a4061ea399e"),
                            BookDefinitionId = new Guid("2e06518f-3313-438d-a545-8a78eacc4c24"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("5dd21cdf-2484-425b-b76a-395466a393f7"),
                            BookDefinitionId = new Guid("89dad99f-71cb-48ef-b19f-3a9d6301881e"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("534a2b62-e5f4-4581-881f-8c134e3218d0"),
                            BookDefinitionId = new Guid("8ee4a029-fd57-452c-871d-e19fabb35114"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2feb5a99-dacb-43a1-8a93-564588104887"),
                            BookDefinitionId = new Guid("b2c12a54-08a0-4783-8491-dad63f188605"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("4a2b8941-4c77-415a-95a6-7203fab72796"),
                            BookDefinitionId = new Guid("46f06f84-b189-47e1-964b-d971f6904423"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("73b906a6-f312-4f1f-9708-cf85091d3c38"),
                            BookDefinitionId = new Guid("09bdf78d-fde7-46dc-a8b0-44afd8dbb719"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("bb76c597-5620-4cd9-935d-223d6da8a710"),
                            BookDefinitionId = new Guid("4d002809-363f-41e0-9611-6f4cba6a0801"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2562311c-b6d0-4271-b74d-b14720b2dc49"),
                            BookDefinitionId = new Guid("f87e33ee-519f-42e9-8907-3c804b1fd8f9"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("d147a7a7-8ae9-4db6-8372-1edd0315dcc6"),
                            BookDefinitionId = new Guid("46f06f84-b189-47e1-964b-d971f6904423"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("469050f3-7e2d-4b4c-939a-6599ceb5f848"),
                            BookDefinitionId = new Guid("fe2be515-3634-4a46-a76f-505911cc0d98"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("cd31c12c-74fd-46dc-acf0-2948ab277748"),
                            BookDefinitionId = new Guid("61d994af-c364-48cc-9c53-e5043a1b9969"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("54c66203-de9b-47c5-b6c5-2015ca5080cd"),
                            BookDefinitionId = new Guid("4d09d67e-fcdb-4e84-84e7-d0e8c9cfedce"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("89634460-5d82-44ee-86de-106924d1496b"),
                            BookDefinitionId = new Guid("d014ef0f-e191-4da4-ac86-846a74cfce4c"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ed6848e2-d4cd-4712-8203-303fabb8e0b2"),
                            BookDefinitionId = new Guid("89dad99f-71cb-48ef-b19f-3a9d6301881e"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("11ee7819-8d61-4edc-ad9b-bc264612e6d3"),
                            BookDefinitionId = new Guid("396b403a-ee0a-4e44-afd7-281d15fe1f67"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("d744aff3-4cc0-4f6d-b8fb-9df7e37dba5b"),
                            BookDefinitionId = new Guid("8d9da468-088d-405d-90b1-51699ae1c343"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("b17ce6c6-a108-4887-b20e-bcee775b3fde"),
                            BookDefinitionId = new Guid("1e6515c7-d830-4a93-aebb-a0d2c21214a4"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("6771c726-f4de-41a6-9206-5f34c3624f8a"),
                            BookDefinitionId = new Guid("cd222b11-ecaf-44f4-8ab0-874301d5bec6"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("963661d0-abf6-4885-a6f5-26762c70b3d0"),
                            BookDefinitionId = new Guid("09bdf78d-fde7-46dc-a8b0-44afd8dbb719"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("86ff24c2-14b7-4f78-83cd-65be6f2a1595"),
                            BookDefinitionId = new Guid("b2c12a54-08a0-4783-8491-dad63f188605"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("3f2fef71-992a-4046-9861-2d0741932545"),
                            BookDefinitionId = new Guid("3c14af86-7dab-4fe3-9a95-01e5baa562af"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("37570613-945a-46b8-b562-ea485ad34d83"),
                            BookDefinitionId = new Guid("f24c1c06-332e-40e7-b2e4-0891228d8447"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("LibSys.Models.Entities.BookDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BookDefinitions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7384aafe-a2a9-4a09-85fd-c5292194a108"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i Kamień Filozoficzny"
                        },
                        new
                        {
                            Id = new Guid("66268f6f-1422-4449-95eb-fbd81fd8c1ae"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i Komnata Tajemnic"
                        },
                        new
                        {
                            Id = new Guid("8d9da468-088d-405d-90b1-51699ae1c343"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i więzień Azkabanu"
                        },
                        new
                        {
                            Id = new Guid("72dd903c-8380-42eb-881e-b0555b204795"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i Czara Ognia"
                        },
                        new
                        {
                            Id = new Guid("ec53108e-a520-41c8-966e-a692e4c03101"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i Zakon Feniksa"
                        },
                        new
                        {
                            Id = new Guid("1e6515c7-d830-4a93-aebb-a0d2c21214a4"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i Książę Półkrwi"
                        },
                        new
                        {
                            Id = new Guid("4d002809-363f-41e0-9611-6f4cba6a0801"),
                            Author = "Stieg Larsson",
                            Title = "Mężczyźni, którzy nienawidzą kobiet"
                        },
                        new
                        {
                            Id = new Guid("f24c1c06-332e-40e7-b2e4-0891228d8447"),
                            Author = "George R.R. Martin",
                            Title = "Gra o tron (edycja ilustrowana)"
                        },
                        new
                        {
                            Id = new Guid("89dad99f-71cb-48ef-b19f-3a9d6301881e"),
                            Author = "William Shakespeare",
                            Title = "Romeo i Julia"
                        },
                        new
                        {
                            Id = new Guid("396b403a-ee0a-4e44-afd7-281d15fe1f67"),
                            Author = "George R.R. Martin",
                            Title = "Starcie królów (edycja ilustrowana)"
                        },
                        new
                        {
                            Id = new Guid("f75e6b9e-ceb2-495c-a689-2d19c2b2d7ea"),
                            Author = "Camilla Läckberg",
                            Title = "Księżniczka z lodu"
                        },
                        new
                        {
                            Id = new Guid("79335884-9aea-4434-ab2d-83a7be4aa26e"),
                            Author = "George R.R. Martin",
                            Title = "Nawałnica mieczy: Stal i śnieg"
                        },
                        new
                        {
                            Id = new Guid("750ae84d-6328-4b6e-a94f-cbf4898168bb"),
                            Author = "Johann Wolfgang von Goethe",
                            Title = "Cierpienia młodego Wertera"
                        },
                        new
                        {
                            Id = new Guid("f87e33ee-519f-42e9-8907-3c804b1fd8f9"),
                            Author = "Veronica Roth",
                            Title = "Niezgodna"
                        },
                        new
                        {
                            Id = new Guid("0c706e3d-1ec9-43ce-9750-68f582395cce"),
                            Author = "J.K. Rowling, Jack Thorne",
                            Title = "Harry Potter i Przeklęte Dziecko"
                        },
                        new
                        {
                            Id = new Guid("d4e971b0-c39d-413c-a241-f8474cf976eb"),
                            Author = "Juliusz Słowacki",
                            Title = "Balladyna"
                        },
                        new
                        {
                            Id = new Guid("b2c12a54-08a0-4783-8491-dad63f188605"),
                            Author = "Camilla Läckberg",
                            Title = "Kaznodzieja"
                        },
                        new
                        {
                            Id = new Guid("09bdf78d-fde7-46dc-a8b0-44afd8dbb719"),
                            Author = "Dan Brown",
                            Title = "Inferno"
                        },
                        new
                        {
                            Id = new Guid("cd222b11-ecaf-44f4-8ab0-874301d5bec6"),
                            Author = "Stanisław Wyspiański",
                            Title = "Wesele"
                        },
                        new
                        {
                            Id = new Guid("46f06f84-b189-47e1-964b-d971f6904423"),
                            Author = "Camilla Läckberg",
                            Title = "Kamieniarz"
                        },
                        new
                        {
                            Id = new Guid("d014ef0f-e191-4da4-ac86-846a74cfce4c"),
                            Author = "Jo Nesbø",
                            Title = "Człowiek nietoperz"
                        },
                        new
                        {
                            Id = new Guid("3c14af86-7dab-4fe3-9a95-01e5baa562af"),
                            Author = "Juliusz Słowacki",
                            Title = "Kordian"
                        },
                        new
                        {
                            Id = new Guid("3ee71b64-e7c6-4326-8f0f-f242c6ff3d81"),
                            Author = "Andrzej Sapkowski",
                            Title = "Narrenturm"
                        },
                        new
                        {
                            Id = new Guid("062270fa-a29b-428b-b6dd-296980c631d6"),
                            Author = "Kornel Makuszyński",
                            Title = "Szatan z siódmej klasy"
                        },
                        new
                        {
                            Id = new Guid("4d09d67e-fcdb-4e84-84e7-d0e8c9cfedce"),
                            Author = "Camilla Läckberg",
                            Title = "Ofiara losu"
                        },
                        new
                        {
                            Id = new Guid("2e06518f-3313-438d-a545-8a78eacc4c24"),
                            Author = "Cassandra Clare",
                            Title = "Miasto upadłych aniołów"
                        },
                        new
                        {
                            Id = new Guid("61d994af-c364-48cc-9c53-e5043a1b9969"),
                            Author = "Camilla Läckberg",
                            Title = "Niemiecki bękart"
                        },
                        new
                        {
                            Id = new Guid("fe2be515-3634-4a46-a76f-505911cc0d98"),
                            Author = "Władysław Stanisław Reymont",
                            Title = "Chłopi"
                        },
                        new
                        {
                            Id = new Guid("d10781e9-e6bf-4952-97b6-dda58844ac3a"),
                            Author = "Andrzej Ziemiański",
                            Title = "Achaja. Tom I"
                        },
                        new
                        {
                            Id = new Guid("8ee4a029-fd57-452c-871d-e19fabb35114"),
                            Author = "Christopher Paolini",
                            Title = "Dziedzictwo"
                        });
                });

            modelBuilder.Entity("LibSys.Models.Entities.Borrowing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<Guid>("ReaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ReaderId");

                    b.ToTable("Borrowings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f87f554e-76c0-4083-88cd-b25627255fac"),
                            BookId = new Guid("22014102-1313-4e1b-8595-0ee3bd956b7b"),
                            BorrowDate = new DateTime(2025, 6, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("a590aceb-5fac-407e-b524-80016252ed05"),
                            ReturnDate = new DateTime(2025, 8, 12, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("fc5cd01b-d3e1-4eba-99c6-b17c42a2fb9e"),
                            BookId = new Guid("aa7cf24e-6e31-4c5f-8037-32ed8148c9ab"),
                            BorrowDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            ReturnDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("fca8fd93-c7b4-4b49-b6b0-d0e4b9d7af19"),
                            BookId = new Guid("11f62823-1efc-42ae-a239-fafaf4f7fea4"),
                            BorrowDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("a590aceb-5fac-407e-b524-80016252ed05"),
                            ReturnDate = new DateTime(2025, 8, 14, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("3524fcb7-5bda-4b8c-8efa-5f67efaa2be2"),
                            BookId = new Guid("c64332b8-b6f0-4862-a614-a44932a2aa1f"),
                            BorrowDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 14, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("cd43ce62-3f1a-404d-af67-5433c8e59445"),
                            BookId = new Guid("2fdab4b6-424b-41f5-abef-c7875672a417"),
                            BorrowDate = new DateTime(2025, 6, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("a590aceb-5fac-407e-b524-80016252ed05"),
                            ReturnDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("a33e511b-f381-4766-b4e3-aa52d2e9a327"),
                            BookId = new Guid("d244a1ed-90f0-4c3c-97c2-92d56669b090"),
                            BorrowDate = new DateTime(2025, 6, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("997e2e66-e19e-4559-808c-38b438248bf0"),
                            ReturnDate = new DateTime(2025, 8, 12, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("e92b622a-268c-49c6-893d-e2f6f0dc65a7"),
                            BookId = new Guid("1a8c333c-50c3-4e8f-a95a-9327806ccfe8"),
                            BorrowDate = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 3, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("d991e54f-d25e-46f2-a01b-46a3e59d0f32"),
                            BookId = new Guid("79b85eeb-5dea-4b6e-9f79-0080b7f23e4e"),
                            BorrowDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("a590aceb-5fac-407e-b524-80016252ed05"),
                            ReturnDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("c0375e0f-795d-45f0-a5f5-3a6e5a3b8f16"),
                            BookId = new Guid("7a1d6684-fa6a-4358-898b-003f1b7028c0"),
                            BorrowDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            ReturnDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("397b503c-34c7-4c60-92a1-1b1a0506817e"),
                            BookId = new Guid("f6dfe78e-f6c5-4279-81cd-db3b0277118d"),
                            BorrowDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("997e2e66-e19e-4559-808c-38b438248bf0"),
                            ReturnDate = new DateTime(2025, 8, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("6902a69b-5e9a-47fd-a5cd-8c7c7bf6a7c8"),
                            BookId = new Guid("8efe06d1-e615-4b8d-8dbf-6112abf544ad"),
                            BorrowDate = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            ReturnDate = new DateTime(2025, 8, 3, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("15ebf41c-b645-4a55-9106-2ed0512d4f6d"),
                            BookId = new Guid("cf748795-aacc-40a2-b9c7-d33294897510"),
                            BorrowDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("043f1517-9ff9-4d6d-ad95-7db9ed983d7f"),
                            BookId = new Guid("023352d7-c904-4761-b84f-ff545db51356"),
                            BorrowDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            ReturnDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("8794fcee-4195-4301-ac56-1447a66162fb"),
                            BookId = new Guid("a8a01d9d-a135-406f-bdbd-b223c348ed89"),
                            BorrowDate = new DateTime(2025, 6, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("a590aceb-5fac-407e-b524-80016252ed05"),
                            ReturnDate = new DateTime(2025, 8, 13, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("63f1bc98-cd3c-4f72-aec5-c98dd4308f8e"),
                            BookId = new Guid("a3081493-83fe-43f8-bef5-a6d1a7025bbc"),
                            BorrowDate = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 7, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("e685babc-14dc-4791-9f1c-d39546eb3b28"),
                            BookId = new Guid("68ea4b22-f817-4e39-a958-6ac88c003750"),
                            BorrowDate = new DateTime(2025, 6, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("997e2e66-e19e-4559-808c-38b438248bf0"),
                            ReturnDate = new DateTime(2025, 8, 13, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("0ea683dd-1864-49bf-aba4-eb6dcf760ea7"),
                            BookId = new Guid("fc5b9a46-84bb-4764-a9d4-8942c8598281"),
                            BorrowDate = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            ReturnDate = new DateTime(2025, 8, 3, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("47f30bf5-085e-47d4-b26d-a75b8980f837"),
                            BookId = new Guid("9d6b194d-31a1-40ff-a418-cc8675899a95"),
                            BorrowDate = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            ReturnDate = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("d400c04d-683d-4421-8bed-624434cb5b72"),
                            BookId = new Guid("c5cc291c-60b3-4501-8dce-f17065ee37f0"),
                            BorrowDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("a590aceb-5fac-407e-b524-80016252ed05"),
                            ReturnDate = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("14281345-e2a2-4281-9798-2ff2775e3227"),
                            BookId = new Guid("3392f6b8-c125-455a-bfc0-51ed23cd5916"),
                            BorrowDate = new DateTime(2025, 6, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("616885bc-a41d-46e4-9d57-105bca1f8d32"),
                            BookId = new Guid("5d8eb8c3-aeb1-4d6f-9e10-ded6a3946e65"),
                            BorrowDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("f289b746-f143-4091-a804-36736fba0a22"),
                            BookId = new Guid("d134db95-61d3-4525-a8f3-dc9641e316ed"),
                            BorrowDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            ReturnDate = new DateTime(2025, 7, 31, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("0d95e537-19b7-48a5-9368-851688eae49e"),
                            BookId = new Guid("7144c051-b774-4462-984d-487da78c948b"),
                            BorrowDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("a590aceb-5fac-407e-b524-80016252ed05"),
                            ReturnDate = new DateTime(2025, 8, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("6fbf0ab5-a276-4988-a88d-a29e64625cfe"),
                            BookId = new Guid("e8ec9325-676a-4291-9d09-f1017c5ffeda"),
                            BorrowDate = new DateTime(2025, 6, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            ReturnDate = new DateTime(2025, 8, 12, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("c9ee4207-b6f0-4a68-99eb-655475e8a03a"),
                            BookId = new Guid("af477235-538e-47db-81fc-9518081ee63c"),
                            BorrowDate = new DateTime(2025, 6, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("23e6e5fd-e3b3-45a1-927b-dd2ca828eb56"),
                            BookId = new Guid("7bde3419-8096-4577-939d-af86d556df0a"),
                            BorrowDate = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 6, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("640b5b0d-afc1-409d-8b2c-e35a9ab0ef01"),
                            BookId = new Guid("f78de5f9-269a-4a10-a248-b7380dc2e1ab"),
                            BorrowDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 7, 31, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("671f0409-7f0d-419c-b814-e80e990f4616"),
                            BookId = new Guid("f6a1ac1e-587e-4ba2-b8e9-58e1549fa132"),
                            BorrowDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("d0bcdc74-a766-4b41-8d5f-e07deb825800"),
                            BookId = new Guid("2feb5a99-dacb-43a1-8a93-564588104887"),
                            BorrowDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            ReturnDate = new DateTime(2025, 8, 14, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("88fb3a00-e032-4f72-ac89-a8e6fb6461f8"),
                            BookId = new Guid("2562311c-b6d0-4271-b74d-b14720b2dc49"),
                            BorrowDate = new DateTime(2025, 6, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            ReturnDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("5f77ca36-fa9b-4e64-b79f-b13de06b1968"),
                            BookId = new Guid("469050f3-7e2d-4b4c-939a-6599ceb5f848"),
                            BorrowDate = new DateTime(2025, 6, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 12, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("6ab3b254-1d5f-4dc4-8d91-63f394133dbd"),
                            BookId = new Guid("89634460-5d82-44ee-86de-106924d1496b"),
                            BorrowDate = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            ReturnDate = new DateTime(2025, 8, 3, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("f046f78e-74f7-44e3-a618-afb4f487be20"),
                            BookId = new Guid("ed6848e2-d4cd-4712-8203-303fabb8e0b2"),
                            BorrowDate = new DateTime(2025, 6, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("997e2e66-e19e-4559-808c-38b438248bf0"),
                            ReturnDate = new DateTime(2025, 8, 13, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("ba5559ea-cc0b-4647-8924-8840c9fa4995"),
                            BookId = new Guid("6771c726-f4de-41a6-9206-5f34c3624f8a"),
                            BorrowDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("LibSys.Models.Entities.LogEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityChanges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("LibSys.Models.Entities.Reader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Readers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            City = "Poznań",
                            Code = "61-842",
                            Name = "Jan Kowalski",
                            Street = "Za Bramką 12"
                        },
                        new
                        {
                            Id = new Guid("a590aceb-5fac-407e-b524-80016252ed05"),
                            City = "Poznań",
                            Code = "61-111",
                            Name = "Tomasz Rydz",
                            Street = "Garbary 1"
                        },
                        new
                        {
                            Id = new Guid("997e2e66-e19e-4559-808c-38b438248bf0"),
                            City = "Poznań",
                            Code = "61-111",
                            Name = "Aleksandra Mechrzycka",
                            Street = "Solna 2"
                        },
                        new
                        {
                            Id = new Guid("e74256dd-1022-47e1-9673-624afe76c181"),
                            City = "Poznań",
                            Code = "61-311",
                            Name = "Jan Nowak",
                            Street = "Wieżowa 3"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8398a233-f6b9-4361-977c-da6a3e9c2bbe",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "6413944e-a5d8-430e-9a85-a914f5cb349b",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a423ec7-faf9-4cf2-b635-77bbd5f1f17d",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELnFOklaBx8G0X8DcZdrwScJPagv8u9O942NKOO4h0abG4efZaxqRg8iprYqP4yGyg==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a4bfdeed-48cf-45be-b181-1d9284c72c44",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            RoleId = "8398a233-f6b9-4361-977c-da6a3e9c2bbe"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LibSys.Models.Entities.Book", b =>
                {
                    b.HasOne("LibSys.Models.Entities.BookDefinition", "BookDefinition")
                        .WithMany()
                        .HasForeignKey("BookDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookDefinition");
                });

            modelBuilder.Entity("LibSys.Models.Entities.Borrowing", b =>
                {
                    b.HasOne("LibSys.Models.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibSys.Models.Entities.Reader", "Reader")
                        .WithMany()
                        .HasForeignKey("ReaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Reader");
                });

            modelBuilder.Entity("LibSys.Models.Entities.Reader", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
