// <auto-generated />
using System;
using LibSys.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibSys.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250630185253_AddIsReturnedToBorrowing")]
    partial class AddIsReturnedToBorrowing
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibSys.Models.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookDefinitionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookDefinitionId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2009259f-d93b-4b5b-ac21-75166bd32b95"),
                            BookDefinitionId = new Guid("83945207-8abc-4fad-979d-d674516ba419"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("2bfb74eb-46a6-4c85-b8bb-5442209ff626"),
                            BookDefinitionId = new Guid("bc11f8e7-d772-4a6e-8050-33f8245c86f6"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("b2b6d315-6a55-427f-824f-faf47ce8e2d9"),
                            BookDefinitionId = new Guid("f64a0954-bf19-4cac-88bb-2b5222face8f"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("ca89a60d-dab4-4e6e-bb9b-39c5eb352492"),
                            BookDefinitionId = new Guid("23ea8ae7-34ca-4400-b5a7-9adb729996b9"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("f4fa4a0e-eafb-49fd-97b8-802aa6ddd9ed"),
                            BookDefinitionId = new Guid("70e36a70-628f-490c-87b5-e65b0763ca7c"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e3559aee-fa6a-42a8-837d-32546d00563a"),
                            BookDefinitionId = new Guid("595b559a-418f-42bd-87f7-38fc41e049a3"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("8bc11948-0df4-404a-b484-996a0cc2acdf"),
                            BookDefinitionId = new Guid("ec1d1cd3-72f1-4b91-b1af-2903e428d101"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("824d3b30-4175-46e3-8f6d-8b67e18d3fba"),
                            BookDefinitionId = new Guid("492970a0-4063-48a9-bd6c-fef09b2ca85e"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("6e327069-29a9-4d23-8322-9026c8e1ad44"),
                            BookDefinitionId = new Guid("70e36a70-628f-490c-87b5-e65b0763ca7c"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("9dabd019-bfb7-4bf5-b28a-0a6ccc6fb7be"),
                            BookDefinitionId = new Guid("47475748-4707-4e71-9ac2-dbae4d653d34"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e3cd70c0-e3a8-4812-a2be-f46a751e18d7"),
                            BookDefinitionId = new Guid("47475748-4707-4e71-9ac2-dbae4d653d34"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("6bb32d96-3d2d-4bf1-9790-493918d99601"),
                            BookDefinitionId = new Guid("85120e11-4dae-45c4-8781-fe61e8e2d0b2"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6e6d4afe-0d27-46fb-a426-403ad5820cb1"),
                            BookDefinitionId = new Guid("337552a9-c86d-487a-961d-474b1eb70dc3"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("1b4208ee-f302-4aec-be47-1cded755bcfe"),
                            BookDefinitionId = new Guid("23ea8ae7-34ca-4400-b5a7-9adb729996b9"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e6f14bdb-d30a-4f9b-ae5c-7932b025e60d"),
                            BookDefinitionId = new Guid("f64a0954-bf19-4cac-88bb-2b5222face8f"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("cc84facc-cc0c-4ac6-8341-42666bfe5db7"),
                            BookDefinitionId = new Guid("33f65ba7-db1d-4224-8a6a-52be45521301"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("cd5a7b63-770e-4ae8-9cf2-1e89cb55cb68"),
                            BookDefinitionId = new Guid("b2318651-e3d7-4640-8392-0265679afaba"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("590121a5-17b2-4b10-af37-4667994a6b15"),
                            BookDefinitionId = new Guid("c70a4f54-f758-4221-bc6c-b8a547a4c9d1"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("44d7b59c-962c-4f3a-b3a2-49c1e44f8d22"),
                            BookDefinitionId = new Guid("aa96bc54-3a60-474f-bd61-8f621de9e036"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("553f5fa1-b2ef-476b-b712-483bc6ab0705"),
                            BookDefinitionId = new Guid("97349608-1bfd-4cba-83b5-681872a2b06f"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("60800305-01d5-4301-8fbc-b40f3d49db30"),
                            BookDefinitionId = new Guid("97349608-1bfd-4cba-83b5-681872a2b06f"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("dba7b216-8936-4209-8ba6-60102ae6624a"),
                            BookDefinitionId = new Guid("57daa9f2-ad3d-4bb3-aaf1-b5009c8b62da"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("1c2ac8f7-1d7c-4af3-aad9-034831317d8e"),
                            BookDefinitionId = new Guid("c70a4f54-f758-4221-bc6c-b8a547a4c9d1"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("4e01c697-29db-4d00-922e-b7ee3879d2fc"),
                            BookDefinitionId = new Guid("33f65ba7-db1d-4224-8a6a-52be45521301"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2348eb91-6717-41fc-ab21-89377cfc117a"),
                            BookDefinitionId = new Guid("999c84b2-fd5c-42ed-bc77-d77c864197c5"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("f5f41c7d-8936-4482-979f-277d05d1b07c"),
                            BookDefinitionId = new Guid("948e56f5-2ead-40f2-9588-c80988e20857"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("6bd5ca91-395e-4045-823c-4afbd0cfee6d"),
                            BookDefinitionId = new Guid("bc11f8e7-d772-4a6e-8050-33f8245c86f6"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("203b70ef-de0a-407b-ba18-da7e682d2c2d"),
                            BookDefinitionId = new Guid("bc11f8e7-d772-4a6e-8050-33f8245c86f6"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("6e59d35d-8fd5-4634-807e-8dadfef2a5d7"),
                            BookDefinitionId = new Guid("bc11f8e7-d772-4a6e-8050-33f8245c86f6"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("bab8f4da-2feb-4597-b500-2f82046b4372"),
                            BookDefinitionId = new Guid("f6cec10a-12c3-48f0-a849-3e269c980da0"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("5088dbc5-216a-4c89-86e4-8c16e1c2b5e6"),
                            BookDefinitionId = new Guid("999c84b2-fd5c-42ed-bc77-d77c864197c5"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("f12d90c8-8697-4274-a0bc-2e8273deccf8"),
                            BookDefinitionId = new Guid("999c84b2-fd5c-42ed-bc77-d77c864197c5"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("659e3ec2-0d5c-4fa2-b97c-3177efeb1c70"),
                            BookDefinitionId = new Guid("f2321de8-6342-4299-b18b-dedda3150095"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("e2e68fd1-fc5a-40b8-89cb-9c295af6f5f5"),
                            BookDefinitionId = new Guid("97349608-1bfd-4cba-83b5-681872a2b06f"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("803aec2a-c4fa-4292-9851-2b6cf604c2d3"),
                            BookDefinitionId = new Guid("e9b23c5c-9fb5-4b5f-bc8e-091a4ad5fab8"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("8e565425-7450-49f9-8b2b-70396b36a687"),
                            BookDefinitionId = new Guid("f64a0954-bf19-4cac-88bb-2b5222face8f"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("769827be-b1a9-4d10-90bd-0c6b0dc30bb7"),
                            BookDefinitionId = new Guid("1bbb9bc8-3c1b-4eca-9e4b-2b420f3a0d17"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("fa31f203-3598-4248-8d2b-cc8e818436e0"),
                            BookDefinitionId = new Guid("83945207-8abc-4fad-979d-d674516ba419"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("52707841-538d-4a4c-9b1c-e3791aa4cdfd"),
                            BookDefinitionId = new Guid("97349608-1bfd-4cba-83b5-681872a2b06f"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ef99b059-84de-485e-bfb9-5de788db41a2"),
                            BookDefinitionId = new Guid("ec1d1cd3-72f1-4b91-b1af-2903e428d101"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2a9cdd15-429e-4e03-88d7-9cc4d6c3be17"),
                            BookDefinitionId = new Guid("aa96bc54-3a60-474f-bd61-8f621de9e036"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("96e4a1d6-e6d8-4330-9dba-9b62ba6498be"),
                            BookDefinitionId = new Guid("f6cec10a-12c3-48f0-a849-3e269c980da0"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a3115a1b-3e96-4a96-9a6b-6d4815b1a0ca"),
                            BookDefinitionId = new Guid("492970a0-4063-48a9-bd6c-fef09b2ca85e"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("ff926395-016b-42cb-88b2-f173bbd2a8a0"),
                            BookDefinitionId = new Guid("de7fce35-50e7-4544-9974-fd0341436ee4"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("b9272109-7db1-4302-b70a-8c39efa971b8"),
                            BookDefinitionId = new Guid("7cf4fd2a-2085-4898-8ae9-fbba4881d4ad"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("e6f7f7ae-0034-4e89-84a9-827105ad6b92"),
                            BookDefinitionId = new Guid("4a5d3b84-7243-4dff-abb2-8c0bec35edf8"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("70423068-feb7-4f80-b12c-1f83bf14d00f"),
                            BookDefinitionId = new Guid("ec1d1cd3-72f1-4b91-b1af-2903e428d101"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("6d7b18ec-00ed-4988-8c26-d29bda031173"),
                            BookDefinitionId = new Guid("47475748-4707-4e71-9ac2-dbae4d653d34"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("ebfb3e54-1287-45ad-a7de-3f5f2302bb3d"),
                            BookDefinitionId = new Guid("999c84b2-fd5c-42ed-bc77-d77c864197c5"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("1e9a251d-969e-4bfc-bc6d-0cf460f76fc2"),
                            BookDefinitionId = new Guid("e9b23c5c-9fb5-4b5f-bc8e-091a4ad5fab8"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("8633ad5d-9a2a-4d9c-a8ef-2add2bf8acd4"),
                            BookDefinitionId = new Guid("4a5d3b84-7243-4dff-abb2-8c0bec35edf8"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("38c24d1c-cc97-4fa2-8248-72b08869eea2"),
                            BookDefinitionId = new Guid("57daa9f2-ad3d-4bb3-aaf1-b5009c8b62da"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("439207bf-35b7-451f-92a0-f1ab477b4d02"),
                            BookDefinitionId = new Guid("88e6b985-9172-45ab-8587-392e599177d9"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8251f1ee-8e17-4089-9e51-53e4e2737cad"),
                            BookDefinitionId = new Guid("b2318651-e3d7-4640-8392-0265679afaba"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("6a8fa858-8e0a-4051-9cb2-497ae4c21214"),
                            BookDefinitionId = new Guid("aa96bc54-3a60-474f-bd61-8f621de9e036"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0562998d-6691-4089-ae7e-d165ea110cf2"),
                            BookDefinitionId = new Guid("bc11f8e7-d772-4a6e-8050-33f8245c86f6"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("bf2e055a-70d4-4720-af02-641f6874905d"),
                            BookDefinitionId = new Guid("1bbb9bc8-3c1b-4eca-9e4b-2b420f3a0d17"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("30549fa6-d062-442e-8282-1b55ae80f494"),
                            BookDefinitionId = new Guid("595b559a-418f-42bd-87f7-38fc41e049a3"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("58b4a1fd-1b16-4ba8-ac2f-a5c8f8a2f581"),
                            BookDefinitionId = new Guid("c70a4f54-f758-4221-bc6c-b8a547a4c9d1"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("a23f23c2-a074-4abc-8f67-7674b29e7ac9"),
                            BookDefinitionId = new Guid("ec1d1cd3-72f1-4b91-b1af-2903e428d101"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("74c22f15-d275-40f9-b67e-5fc4e3c8a771"),
                            BookDefinitionId = new Guid("c70a4f54-f758-4221-bc6c-b8a547a4c9d1"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("db6f2a6e-fa0b-4f24-9d03-59d7e68b3652"),
                            BookDefinitionId = new Guid("948e56f5-2ead-40f2-9588-c80988e20857"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("315afc19-6523-4da6-9b21-8663e3da7e1e"),
                            BookDefinitionId = new Guid("47475748-4707-4e71-9ac2-dbae4d653d34"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("3c521708-ee34-406c-b506-d8debe3ac454"),
                            BookDefinitionId = new Guid("595b559a-418f-42bd-87f7-38fc41e049a3"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("28c33ab4-5fb3-482e-8a13-f7ac02df176e"),
                            BookDefinitionId = new Guid("70e36a70-628f-490c-87b5-e65b0763ca7c"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c6127225-1e96-4ae1-9637-f33a12d17924"),
                            BookDefinitionId = new Guid("f6cec10a-12c3-48f0-a849-3e269c980da0"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("af0e9bbb-395d-4cc0-8899-0af561a211ca"),
                            BookDefinitionId = new Guid("57daa9f2-ad3d-4bb3-aaf1-b5009c8b62da"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2fa88909-d99e-401a-8cdc-c4980185c574"),
                            BookDefinitionId = new Guid("f2321de8-6342-4299-b18b-dedda3150095"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d8894169-882a-4d2e-b9b3-309d80cfd20f"),
                            BookDefinitionId = new Guid("47475748-4707-4e71-9ac2-dbae4d653d34"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("d55e937b-78cd-4285-9a73-a6451744dfc5"),
                            BookDefinitionId = new Guid("ec1d1cd3-72f1-4b91-b1af-2903e428d101"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("94ea213b-6a1d-46f8-ba49-73cad16af591"),
                            BookDefinitionId = new Guid("ec1d1cd3-72f1-4b91-b1af-2903e428d101"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("1d3bf77d-cc2d-4b00-aeb5-a4133aa571fd"),
                            BookDefinitionId = new Guid("4a5d3b84-7243-4dff-abb2-8c0bec35edf8"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("7ef3cef9-3982-4bed-a770-0529c4b02964"),
                            BookDefinitionId = new Guid("33f65ba7-db1d-4224-8a6a-52be45521301"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("f00b5d53-2e3a-4124-9776-92ecf7d3365c"),
                            BookDefinitionId = new Guid("47475748-4707-4e71-9ac2-dbae4d653d34"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("fa444cef-d929-49db-ab26-3f9ba59378ca"),
                            BookDefinitionId = new Guid("83945207-8abc-4fad-979d-d674516ba419"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("96f9b237-be01-4258-8403-9f987001ec24"),
                            BookDefinitionId = new Guid("88e6b985-9172-45ab-8587-392e599177d9"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("0214becb-c144-4208-988b-9c8b86a9a3c1"),
                            BookDefinitionId = new Guid("f64a0954-bf19-4cac-88bb-2b5222face8f"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("256c0bf3-b862-4e94-aa8f-67bf39dd8ff8"),
                            BookDefinitionId = new Guid("948e56f5-2ead-40f2-9588-c80988e20857"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("181973b6-30bb-474c-9be5-dbd744b62fa9"),
                            BookDefinitionId = new Guid("47475748-4707-4e71-9ac2-dbae4d653d34"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("91607397-fd90-4457-97c5-a11a4fd23405"),
                            BookDefinitionId = new Guid("f2321de8-6342-4299-b18b-dedda3150095"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("c3ae708c-9496-41db-9f83-cc7ff771ef2a"),
                            BookDefinitionId = new Guid("de7fce35-50e7-4544-9974-fd0341436ee4"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a887e353-1f8e-4c17-8aba-f60bcec2a7f3"),
                            BookDefinitionId = new Guid("595b559a-418f-42bd-87f7-38fc41e049a3"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("8f9f276e-6908-4c64-bb6e-d15a8ed38ba9"),
                            BookDefinitionId = new Guid("47475748-4707-4e71-9ac2-dbae4d653d34"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("fb4e2e27-bc59-43ca-90ec-7263caa8d04f"),
                            BookDefinitionId = new Guid("4a5d3b84-7243-4dff-abb2-8c0bec35edf8"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("3c036593-c2cd-4d0b-8c24-d452431955ea"),
                            BookDefinitionId = new Guid("97349608-1bfd-4cba-83b5-681872a2b06f"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("106f6633-4010-41f7-813c-3dcddd78da6f"),
                            BookDefinitionId = new Guid("47475748-4707-4e71-9ac2-dbae4d653d34"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("d677daad-4d65-4f49-8e0d-334e64ecbb7c"),
                            BookDefinitionId = new Guid("999c84b2-fd5c-42ed-bc77-d77c864197c5"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("c9284e78-2682-4523-85e3-fe9c66e2f165"),
                            BookDefinitionId = new Guid("97349608-1bfd-4cba-83b5-681872a2b06f"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("006cd148-0971-468f-977c-64451fd5ef15"),
                            BookDefinitionId = new Guid("595b559a-418f-42bd-87f7-38fc41e049a3"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("15ea90ad-c058-484a-b998-3f36b356f949"),
                            BookDefinitionId = new Guid("97349608-1bfd-4cba-83b5-681872a2b06f"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("fa499238-89a6-4307-993d-b661a0fbbeff"),
                            BookDefinitionId = new Guid("de7fce35-50e7-4544-9974-fd0341436ee4"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2533aac5-7ea2-47b4-ae19-fec863eeed56"),
                            BookDefinitionId = new Guid("f6cec10a-12c3-48f0-a849-3e269c980da0"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("053cd9e9-e7e2-4478-a5e2-68bb44e79448"),
                            BookDefinitionId = new Guid("4a5d3b84-7243-4dff-abb2-8c0bec35edf8"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("9b0ef3d5-6165-4186-ae7a-f0173aff6721"),
                            BookDefinitionId = new Guid("7cf4fd2a-2085-4898-8ae9-fbba4881d4ad"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("fdef8479-3d17-44f1-a6d6-274292998957"),
                            BookDefinitionId = new Guid("999c84b2-fd5c-42ed-bc77-d77c864197c5"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("63ea266c-f76f-4094-91cf-69e3ce705619"),
                            BookDefinitionId = new Guid("948e56f5-2ead-40f2-9588-c80988e20857"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("eb7621c3-751d-4e0d-9f36-31f66ee069c1"),
                            BookDefinitionId = new Guid("492970a0-4063-48a9-bd6c-fef09b2ca85e"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("983647fe-1ffb-4a36-a85a-8d23f2516175"),
                            BookDefinitionId = new Guid("948e56f5-2ead-40f2-9588-c80988e20857"),
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("0aad2b36-7376-40e5-b2ba-3252ffc6bdb5"),
                            BookDefinitionId = new Guid("28a5ee12-3dad-4799-a03b-6950dbc839ea"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("ae969c8a-fd02-4707-8542-c2cee3a4a7b3"),
                            BookDefinitionId = new Guid("70e36a70-628f-490c-87b5-e65b0763ca7c"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("LibSys.Models.Entities.BookDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BookDefinitions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9b23c5c-9fb5-4b5f-bc8e-091a4ad5fab8"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i Kamień Filozoficzny"
                        },
                        new
                        {
                            Id = new Guid("aa96bc54-3a60-474f-bd61-8f621de9e036"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i Komnata Tajemnic"
                        },
                        new
                        {
                            Id = new Guid("337552a9-c86d-487a-961d-474b1eb70dc3"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i więzień Azkabanu"
                        },
                        new
                        {
                            Id = new Guid("f2321de8-6342-4299-b18b-dedda3150095"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i Czara Ognia"
                        },
                        new
                        {
                            Id = new Guid("88e6b985-9172-45ab-8587-392e599177d9"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i Zakon Feniksa"
                        },
                        new
                        {
                            Id = new Guid("1c76ea3c-2d75-43db-813a-4c8a6cdf54a6"),
                            Author = "J.K. Rowling",
                            Title = "Harry Potter i Książę Półkrwi"
                        },
                        new
                        {
                            Id = new Guid("85120e11-4dae-45c4-8781-fe61e8e2d0b2"),
                            Author = "Stieg Larsson",
                            Title = "Mężczyźni, którzy nienawidzą kobiet"
                        },
                        new
                        {
                            Id = new Guid("f64a0954-bf19-4cac-88bb-2b5222face8f"),
                            Author = "George R.R. Martin",
                            Title = "Gra o tron (edycja ilustrowana)"
                        },
                        new
                        {
                            Id = new Guid("23ea8ae7-34ca-4400-b5a7-9adb729996b9"),
                            Author = "William Shakespeare",
                            Title = "Romeo i Julia"
                        },
                        new
                        {
                            Id = new Guid("c70a4f54-f758-4221-bc6c-b8a547a4c9d1"),
                            Author = "George R.R. Martin",
                            Title = "Starcie królów (edycja ilustrowana)"
                        },
                        new
                        {
                            Id = new Guid("57daa9f2-ad3d-4bb3-aaf1-b5009c8b62da"),
                            Author = "Camilla Läckberg",
                            Title = "Księżniczka z lodu"
                        },
                        new
                        {
                            Id = new Guid("83945207-8abc-4fad-979d-d674516ba419"),
                            Author = "George R.R. Martin",
                            Title = "Nawałnica mieczy: Stal i śnieg"
                        },
                        new
                        {
                            Id = new Guid("b2318651-e3d7-4640-8392-0265679afaba"),
                            Author = "Johann Wolfgang von Goethe",
                            Title = "Cierpienia młodego Wertera"
                        },
                        new
                        {
                            Id = new Guid("bc11f8e7-d772-4a6e-8050-33f8245c86f6"),
                            Author = "Veronica Roth",
                            Title = "Niezgodna"
                        },
                        new
                        {
                            Id = new Guid("948e56f5-2ead-40f2-9588-c80988e20857"),
                            Author = "J.K. Rowling, Jack Thorne",
                            Title = "Harry Potter i Przeklęte Dziecko"
                        },
                        new
                        {
                            Id = new Guid("33f65ba7-db1d-4224-8a6a-52be45521301"),
                            Author = "Juliusz Słowacki",
                            Title = "Balladyna"
                        },
                        new
                        {
                            Id = new Guid("492970a0-4063-48a9-bd6c-fef09b2ca85e"),
                            Author = "Camilla Läckberg",
                            Title = "Kaznodzieja"
                        },
                        new
                        {
                            Id = new Guid("595b559a-418f-42bd-87f7-38fc41e049a3"),
                            Author = "Dan Brown",
                            Title = "Inferno"
                        },
                        new
                        {
                            Id = new Guid("1bbb9bc8-3c1b-4eca-9e4b-2b420f3a0d17"),
                            Author = "Stanisław Wyspiański",
                            Title = "Wesele"
                        },
                        new
                        {
                            Id = new Guid("28a5ee12-3dad-4799-a03b-6950dbc839ea"),
                            Author = "Camilla Läckberg",
                            Title = "Kamieniarz"
                        },
                        new
                        {
                            Id = new Guid("999c84b2-fd5c-42ed-bc77-d77c864197c5"),
                            Author = "Jo Nesbø",
                            Title = "Człowiek nietoperz"
                        },
                        new
                        {
                            Id = new Guid("47475748-4707-4e71-9ac2-dbae4d653d34"),
                            Author = "Juliusz Słowacki",
                            Title = "Kordian"
                        },
                        new
                        {
                            Id = new Guid("0e69497b-b805-415b-92b0-44354119c9b8"),
                            Author = "Andrzej Sapkowski",
                            Title = "Narrenturm"
                        },
                        new
                        {
                            Id = new Guid("97349608-1bfd-4cba-83b5-681872a2b06f"),
                            Author = "Kornel Makuszyński",
                            Title = "Szatan z siódmej klasy"
                        },
                        new
                        {
                            Id = new Guid("4a5d3b84-7243-4dff-abb2-8c0bec35edf8"),
                            Author = "Camilla Läckberg",
                            Title = "Ofiara losu"
                        },
                        new
                        {
                            Id = new Guid("7cf4fd2a-2085-4898-8ae9-fbba4881d4ad"),
                            Author = "Cassandra Clare",
                            Title = "Miasto upadłych aniołów"
                        },
                        new
                        {
                            Id = new Guid("ec1d1cd3-72f1-4b91-b1af-2903e428d101"),
                            Author = "Camilla Läckberg",
                            Title = "Niemiecki bękart"
                        },
                        new
                        {
                            Id = new Guid("de7fce35-50e7-4544-9974-fd0341436ee4"),
                            Author = "Władysław Stanisław Reymont",
                            Title = "Chłopi"
                        },
                        new
                        {
                            Id = new Guid("70e36a70-628f-490c-87b5-e65b0763ca7c"),
                            Author = "Andrzej Ziemiański",
                            Title = "Achaja. Tom I"
                        },
                        new
                        {
                            Id = new Guid("f6cec10a-12c3-48f0-a849-3e269c980da0"),
                            Author = "Christopher Paolini",
                            Title = "Dziedzictwo"
                        });
                });

            modelBuilder.Entity("LibSys.Models.Entities.Borrowing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<Guid>("ReaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ReaderId");

                    b.ToTable("Borrowings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("040685b8-8301-49af-9a96-792d0ac5bcbf"),
                            BookId = new Guid("9dabd019-bfb7-4bf5-b28a-0a6ccc6fb7be"),
                            BorrowDate = new DateTime(2025, 6, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("36e5ee1b-d04d-4a90-ac56-7dd194ac1d3e"),
                            ReturnDate = new DateTime(2025, 8, 2, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("4b65f7d0-d886-4cb3-90a8-2821d0e60833"),
                            BookId = new Guid("6bb32d96-3d2d-4bf1-9790-493918d99601"),
                            BorrowDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("f59f0e73-472e-446b-b1bf-c580ff61be61"),
                            ReturnDate = new DateTime(2025, 7, 31, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("90bcff3d-b740-47f1-80cf-d3a1097332b8"),
                            BookId = new Guid("1b4208ee-f302-4aec-be47-1cded755bcfe"),
                            BorrowDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("92ba124c-5137-423b-b0f0-b5af1f367967"),
                            BookId = new Guid("60800305-01d5-4301-8fbc-b40f3d49db30"),
                            BorrowDate = new DateTime(2025, 6, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("f59f0e73-472e-446b-b1bf-c580ff61be61"),
                            ReturnDate = new DateTime(2025, 8, 2, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("385969f0-e7ec-4b38-ae0b-36cdcaa85326"),
                            BookId = new Guid("6e59d35d-8fd5-4634-807e-8dadfef2a5d7"),
                            BorrowDate = new DateTime(2025, 6, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("0926e9e0-f32e-40cc-9419-8d2471437bb7"),
                            BookId = new Guid("bab8f4da-2feb-4597-b500-2f82046b4372"),
                            BorrowDate = new DateTime(2025, 6, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("c4782b0c-f125-4a58-96a4-1d85424463e7"),
                            BookId = new Guid("659e3ec2-0d5c-4fa2-b97c-3177efeb1c70"),
                            BorrowDate = new DateTime(2025, 6, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("3f634408-4a5e-4536-b288-58ed91d1524b"),
                            BookId = new Guid("e2e68fd1-fc5a-40b8-89cb-9c295af6f5f5"),
                            BorrowDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("36e5ee1b-d04d-4a90-ac56-7dd194ac1d3e"),
                            ReturnDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("79d2f1c1-bfe5-4986-af0d-731c076043a6"),
                            BookId = new Guid("52707841-538d-4a4c-9b1c-e3791aa4cdfd"),
                            BorrowDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("1b3f7d36-a430-4944-9c9f-d473da2cf48a"),
                            BookId = new Guid("ef99b059-84de-485e-bfb9-5de788db41a2"),
                            BorrowDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("f59f0e73-472e-446b-b1bf-c580ff61be61"),
                            ReturnDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("51805b91-015c-46e7-9f01-074ff00bce8e"),
                            BookId = new Guid("96e4a1d6-e6d8-4330-9dba-9b62ba6498be"),
                            BorrowDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("36e5ee1b-d04d-4a90-ac56-7dd194ac1d3e"),
                            ReturnDate = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("cd7820f7-61b4-43e7-8cd6-ab42ee202591"),
                            BookId = new Guid("e6f7f7ae-0034-4e89-84a9-827105ad6b92"),
                            BorrowDate = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 3, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("2a4f67db-3f99-4520-9151-66ce0d0118f5"),
                            BookId = new Guid("8633ad5d-9a2a-4d9c-a8ef-2add2bf8acd4"),
                            BorrowDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 14, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("7018558d-0756-41e2-93be-71d3edad42aa"),
                            BookId = new Guid("439207bf-35b7-451f-92a0-f1ab477b4d02"),
                            BorrowDate = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("36e5ee1b-d04d-4a90-ac56-7dd194ac1d3e"),
                            ReturnDate = new DateTime(2025, 8, 3, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("99afdec4-babd-4ffc-949e-c273c55ba443"),
                            BookId = new Guid("6a8fa858-8e0a-4051-9cb2-497ae4c21214"),
                            BorrowDate = new DateTime(2025, 6, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 13, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("090863c5-a28f-42ab-abcf-54e03140ba0a"),
                            BookId = new Guid("db6f2a6e-fa0b-4f24-9d03-59d7e68b3652"),
                            BorrowDate = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("f59f0e73-472e-446b-b1bf-c580ff61be61"),
                            ReturnDate = new DateTime(2025, 8, 6, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("affc8c0e-4313-4bc4-8178-a542387dfacc"),
                            BookId = new Guid("28c33ab4-5fb3-482e-8a13-f7ac02df176e"),
                            BorrowDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("36e5ee1b-d04d-4a90-ac56-7dd194ac1d3e"),
                            ReturnDate = new DateTime(2025, 8, 14, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("6ff7f4b2-6642-46bc-91a5-f5174ac46a8f"),
                            BookId = new Guid("d55e937b-78cd-4285-9a73-a6451744dfc5"),
                            BorrowDate = new DateTime(2025, 6, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("f59f0e73-472e-446b-b1bf-c580ff61be61"),
                            ReturnDate = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("d7db0bc5-4279-47b7-b6b9-94241ec9187f"),
                            BookId = new Guid("1d3bf77d-cc2d-4b00-aeb5-a4133aa571fd"),
                            BorrowDate = new DateTime(2025, 6, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 13, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("a0bc3012-e8e0-4988-b538-74cfe0c635cc"),
                            BookId = new Guid("fa444cef-d929-49db-ab26-3f9ba59378ca"),
                            BorrowDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("b273206b-b049-4648-aaae-73253e7cb0ff"),
                            BookId = new Guid("96f9b237-be01-4258-8403-9f987001ec24"),
                            BorrowDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("f59f0e73-472e-446b-b1bf-c580ff61be61"),
                            ReturnDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("6ae226e9-3b14-493c-999d-248d9d6b6f46"),
                            BookId = new Guid("91607397-fd90-4457-97c5-a11a4fd23405"),
                            BorrowDate = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("36e5ee1b-d04d-4a90-ac56-7dd194ac1d3e"),
                            ReturnDate = new DateTime(2025, 8, 7, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("0a66bd1f-75e1-40d8-9fef-02294a8e52af"),
                            BookId = new Guid("c3ae708c-9496-41db-9f83-cc7ff771ef2a"),
                            BorrowDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("f59f0e73-472e-446b-b1bf-c580ff61be61"),
                            ReturnDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("2d886b1f-ca03-4a5e-b72a-ddaffc853c28"),
                            BookId = new Guid("a887e353-1f8e-4c17-8aba-f60bcec2a7f3"),
                            BorrowDate = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 6, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("adc6ced8-2902-4e74-aa78-c06428a7aabf"),
                            BookId = new Guid("fb4e2e27-bc59-43ca-90ec-7263caa8d04f"),
                            BorrowDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            ReturnDate = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("e948689a-0ed5-40bd-ac84-19b244957df4"),
                            BookId = new Guid("fa499238-89a6-4307-993d-b661a0fbbeff"),
                            BorrowDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("f59f0e73-472e-446b-b1bf-c580ff61be61"),
                            ReturnDate = new DateTime(2025, 7, 31, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("0bd5f8ae-caa7-40e2-84bd-29c6afaf7681"),
                            BookId = new Guid("2533aac5-7ea2-47b4-ae19-fec863eeed56"),
                            BorrowDate = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 6, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("60355a3c-dd53-4941-81e4-b50cb1f5a724"),
                            BookId = new Guid("eb7621c3-751d-4e0d-9f36-31f66ee069c1"),
                            BorrowDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("c4ab7481-8b9e-4d48-861d-2a92ecbc3f26"),
                            BookId = new Guid("0aad2b36-7376-40e5-b2ba-3252ffc6bdb5"),
                            BorrowDate = new DateTime(2025, 6, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            IsReturned = false,
                            ReaderId = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            ReturnDate = new DateTime(2025, 8, 2, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("LibSys.Models.Entities.LogEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityChanges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("LibSys.Models.Entities.Reader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Readers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d31a024-4e84-4f5e-b86b-04b10d79559e"),
                            City = "Poznań",
                            Code = "61-842",
                            Name = "Jan Kowalski",
                            Street = "Za Bramką 12"
                        },
                        new
                        {
                            Id = new Guid("f59f0e73-472e-446b-b1bf-c580ff61be61"),
                            City = "Poznań",
                            Code = "61-111",
                            Name = "Tomasz Rydz",
                            Street = "Garbary 1"
                        },
                        new
                        {
                            Id = new Guid("d23e27cd-3d26-48ed-b05c-5d2c0ddd2108"),
                            City = "Poznań",
                            Code = "61-111",
                            Name = "Aleksandra Mechrzycka",
                            Street = "Solna 2"
                        },
                        new
                        {
                            Id = new Guid("36e5ee1b-d04d-4a90-ac56-7dd194ac1d3e"),
                            City = "Poznań",
                            Code = "61-311",
                            Name = "Jan Nowak",
                            Street = "Wieżowa 3"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8398a233-f6b9-4361-977c-da6a3e9c2bbe",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "6413944e-a5d8-430e-9a85-a914f5cb349b",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f1879ea6-270f-4d04-82dc-4c9f505436d6",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHpAJ6TmMxA2pwcIzl9m22fnE2GfC2Dq2VPhwTYmgR5qZPeYQC8z3+Oig4V+r3bvJQ==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c0a5e325-fca3-4bc9-b18a-ea1e05272f79",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            RoleId = "8398a233-f6b9-4361-977c-da6a3e9c2bbe"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LibSys.Models.Entities.Book", b =>
                {
                    b.HasOne("LibSys.Models.Entities.BookDefinition", "BookDefinition")
                        .WithMany()
                        .HasForeignKey("BookDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookDefinition");
                });

            modelBuilder.Entity("LibSys.Models.Entities.Borrowing", b =>
                {
                    b.HasOne("LibSys.Models.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibSys.Models.Entities.Reader", "Reader")
                        .WithMany()
                        .HasForeignKey("ReaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Reader");
                });

            modelBuilder.Entity("LibSys.Models.Entities.Reader", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
